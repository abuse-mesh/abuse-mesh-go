// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/admin-api.proto

/*
Package admininterface is a generated protocol buffer package.

It is generated from these files:
	api/admin-api.proto

It has these top-level messages:
	GetNodeRequest
*/
package admininterface

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import abusemesh "vendor/github.com/abuse-mesh/abuse-mesh-protocol"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetNodeRequest struct {
}

func (m *GetNodeRequest) Reset()                    { *m = GetNodeRequest{} }
func (m *GetNodeRequest) String() string            { return proto.CompactTextString(m) }
func (*GetNodeRequest) ProtoMessage()               {}
func (*GetNodeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func init() {
	proto.RegisterType((*GetNodeRequest)(nil), "admininterface.GetNodeRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Admininterface service

type AdmininterfaceClient interface {
	// Returns the Node data of the current node
	GetNode(ctx context.Context, in *GetNodeRequest, opts ...grpc.CallOption) (*abusemesh.Node, error)
}

type admininterfaceClient struct {
	cc *grpc.ClientConn
}

func NewAdmininterfaceClient(cc *grpc.ClientConn) AdmininterfaceClient {
	return &admininterfaceClient{cc}
}

func (c *admininterfaceClient) GetNode(ctx context.Context, in *GetNodeRequest, opts ...grpc.CallOption) (*abusemesh.Node, error) {
	out := new(abusemesh.Node)
	err := grpc.Invoke(ctx, "/admininterface.admininterface/GetNode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Admininterface service

type AdmininterfaceServer interface {
	// Returns the Node data of the current node
	GetNode(context.Context, *GetNodeRequest) (*abusemesh.Node, error)
}

func RegisterAdmininterfaceServer(s *grpc.Server, srv AdmininterfaceServer) {
	s.RegisterService(&_Admininterface_serviceDesc, srv)
}

func _Admininterface_GetNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdmininterfaceServer).GetNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admininterface.admininterface/GetNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdmininterfaceServer).GetNode(ctx, req.(*GetNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Admininterface_serviceDesc = grpc.ServiceDesc{
	ServiceName: "admininterface.admininterface",
	HandlerType: (*AdmininterfaceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetNode",
			Handler:    _Admininterface_GetNode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/admin-api.proto",
}

func init() { proto.RegisterFile("api/admin-api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 158 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8d, 0x3b, 0x0e, 0xc2, 0x30,
	0x0c, 0x40, 0x37, 0x90, 0x32, 0x14, 0x14, 0xb6, 0x0e, 0x0c, 0xec, 0x71, 0x24, 0xd8, 0xb8, 0x00,
	0x0c, 0x88, 0x81, 0x1b, 0xe4, 0x63, 0x68, 0x24, 0x12, 0x87, 0x7c, 0x38, 0x3f, 0x6a, 0x60, 0x68,
	0xd9, 0xac, 0x67, 0x3f, 0x3f, 0xb6, 0x51, 0xd1, 0x49, 0x65, 0xbd, 0x0b, 0x42, 0x45, 0x07, 0x31,
	0x51, 0x21, 0xde, 0x35, 0xe0, 0x42, 0xc1, 0x74, 0x57, 0x06, 0xfb, 0xf3, 0x1b, 0x83, 0xa5, 0x24,
	0x1f, 0xae, 0x0c, 0x55, 0x83, 0x21, 0x2f, 0x95, 0xae, 0x19, 0x85, 0xc7, 0x3c, 0x4c, 0x46, 0xd1,
	0x74, 0x43, 0xcf, 0x29, 0x33, 0xe4, 0x3d, 0x85, 0xef, 0xe7, 0xdd, 0x9a, 0x75, 0x27, 0x2c, 0x57,
	0xb2, 0x78, 0xc3, 0x57, 0xc5, 0x5c, 0xf6, 0x17, 0xf6, 0x57, 0xe3, 0x47, 0xb6, 0xfc, 0xdd, 0xf0,
	0x2d, 0xcc, 0x77, 0x30, 0x97, 0xfb, 0x15, 0xb4, 0xd0, 0xd8, 0x81, 0x91, 0xeb, 0x45, 0xcb, 0x1c,
	0x3e, 0x01, 0x00, 0x00, 0xff, 0xff, 0x29, 0xf3, 0x6c, 0xf0, 0xd7, 0x00, 0x00, 0x00,
}
